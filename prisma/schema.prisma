// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js" // This generates the Prisma Client JS, which you can use in your application to interact with your database.
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Room {
  host      String
  createdAt DateTime @default(now())
  id        String   @id
  name      String
  oppponent String?
  roundGoal Int      @default(3) // Number of rounds left in the game, default is 3
  rounds     String @default("[]") // JSON string to store rounds data, default is an empty array
  wins0    Int      @default(0) // Number of wins for player 0, default is 0
  wins1    Int      @default(0) // Number of wins for player 1, default is 0
  started   Boolean  @default(false) // Indicates whether the game has started or not
  scoreMax  Int      @default(10)
  tournament Boolean  @default(false) // Indicates whether the game is a tournament or not
  score0    Int      @default(0) // Score for player 0, default is 0
  score1    Int      @default(0) // Score for player 1, default is 0
  winner    Int? // The winner of the game, can be null if not determined yet
  Socket    Socket[]
}

model Socket {
  id     Int     @id @default(autoincrement()) // This is the primary key for the Socket model, auto-incremented
  roomId String? // This is a foreign key to the Room model, can be null if not associated with a room
  type   String @default("lobby")
  room   Room?   @relation(fields: [roomId], references: [id]) // This establishes a relation to the Room model
}
